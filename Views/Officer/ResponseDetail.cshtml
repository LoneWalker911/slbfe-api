
@{
    ViewBag.Title = "ResponseDetail";
    Layout = "~/Views/Shared/_CitizenLayout.cshtml";
}
<div id="divCitizenComplaint" class="justify-content-center" v-cloak>
    <div class="jumbotron">
        <div class="card-body ">
            <form id="frmCitizenComplaint">
                <h3> Citizen Complaint</h3>
                <div class="form-row">
                    <div class="form-group col-8">
                        <div class="col-12 float-start px-0 px-md-1">
                            <label class="form-label"></label>
                            <textarea id="txtComplaint" style="font-style: italic; font-weight: bold" name="txtComplaint" class="form-control text-area" placeholder="" v-model="complaint.complaint" rows="3" readonly></textarea>
                        </div>
                    </div>
                    <div class="form-group col-8">
                        <div class="col-12 float-start px-0 px-md-1">
                            <textarea style="text-align: right; font-style:italic; font-weight:bold" id="txtComplaint02" name="txtComplaint02" class="form-control text-area" placeholder="" v-model="complaint.response" rows="3"></textarea>
                            <input type="text" style="text-align: right; border: none; font-style: italic;" class="form-control" placeholder="" v-model="complaint.officer" readonly>
                        </div>
                    </div>
                    <div class="col-8 float-start px-0 px-md-1">
                        <div class="form-field mb-2" >
                            <button v-if="complaint.response === null || complaint.response ===''" style="float:right" type="button" class="btn btn-outline-success" title="Send Response" @@click="sendResponse">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-upload" viewBox="0 0 16 16">
                                    <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                                    <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        const urlParams = new URLSearchParams(window.location.search);
        const param = urlParams.get('id');

    Vue.config.devtools = true;

    if (vueCitizenComplaint != null) {
        vueCitizenComplaint.$destroy();
    }


        var vueCitizenComplaint = new Vue({
            el: '#divCitizenComplaint',
        data: {
            complaint: { },
            editComplaintId: { id: param },




        },
        methods: {
            getComplaintByComplaintId() {
                $.get('https://edu.santhawa.lk/apiv1/complaint/' + String(this.editComplaintId.id), function (data, status, response) {
                    vueCitizenComplaint.complaint = data;
                    vueCitizenComplaint.complaint.officer_id = 1;
                })
            },
            sendResponse() {
                var url = "https://edu.santhawa.lk/apiv1/complaint/" + String(this.editComplaintId.id) + "/response";

                var xhr = new XMLHttpRequest();
                xhr.open("PUT", url);

                xhr.setRequestHeader("Content-Type", "application/json");

                xhr.setRequestHeader("Authorization", "F5JXJ4j6qGx29JVMu6xrBBPubBoxHQDT");

                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        console.log(xhr.status);
                        console.log(xhr.responseText);
                    }
                };
                xhr.send(JSON.stringify(vueCitizenComplaint.complaint));
            },
            sendHeaders() {
                $.ajaxSetup({
                    headers: {
                        'Authorization': getCookie('token')
                    }
                });
            }

        },
        computed: {
        },
            mounted() {
                this.sendHeaders();
            if (param != null)
                this.getComplaintByComplaintId();

        },
    });
    </script>
}
